/*... define globe ...*/;(function($){'use strict';class progresBar{constructor(color){this._color = color?color:"rgba(255,255,255,.4)"; this.init(this._color)}init(col){if (!document.querySelector(".cocontainer")||!document.querySelector(".tetemplate")) {let cocontainer = document.createElement("div");cocontainer.className = "cocontainer";let tetemplate = document.createElement("template");tetemplate.className = "tetemplate";let tetemplateProgressBar= document.createElement("progress");tetemplateProgressBar.max=100;tetemplateProgressBar.value=0;tetemplate.appendChild(tetemplateProgressBar);document.querySelector("body").appendChild(cocontainer);document.querySelector("body").appendChild(tetemplate);}const styleString = `progress{display:block;width:100%;margin:1px 0;background:#fff;height:3px;}progress[value]::-webkit-progress-bar {background-color: #fff;}progress[value]::-webkit-progress-value{background-color: red;}progress[value]::-moz-progress-value{background-color: red;}progress[value]::-moz-progress-bar{background-color: #02d1a4;}.cocontainer{position:absolute;top:0;bottom:0;left:0;right:0;background:${col}}.cocontainer{display:none;}`;if(!document.querySelector("html head style")){let Bodystyle = document.createElement("style");let Bodyhead = document.querySelector("head");Bodystyle.innerHTML += styleString;Bodyhead.appendChild(Bodystyle);}else{document.querySelector("html head style").innerHTML += styleString;}}loader(time) {return new Promise(resolve=>{let ccontainer =document.querySelector(".cocontainer"),tetemplate =document.querySelector(".tetemplate");let elementf = function(){ccontainer.style.display = "unset !important";let proprogress = document.importNode(tetemplate.firstElementChild, true);ccontainer.appendChild(proprogress);setTimeout(()=>{ if(element.value == element.max){ clearInterval(tick); resolve(); } ccontainer.style.display="none"; element.remove() },Number(time+200));return ccontainer.querySelector("progress:last-child") }; elementf();let intervalId,element = ccontainer.querySelector("progress:last-child");function tick(){element.value = parseInt(element.value, 10)+1;}ccontainer.style.display="unset";setInterval(tick,time / element.max);})}}function Progresser (color){return new progresBar(color)}if (typeof define === 'function' && define.amd) {define(function () {return Progresser})} else if (typeof module === 'object' && module.exports) {module.exports = Progresser} else {$.Progresser = Progresser}})(this);/*... Done ...*/